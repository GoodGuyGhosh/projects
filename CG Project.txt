#include<windows.h>
#define GLUT_DISABLE_ATEXIT_HACK
#include<GL/gl.h>
#include<GL/glut.h>
#include<bits/stdc++.h>
using namespace std;
float dist=0;
string str1,str2,str3;
string str;
int flag=1;
char input1[200];
char res1[200];
//unsigned char key;


void drawBitmapText(char *str,float x,float y,float z = 0, float font = 1)
{
    char *c;
    // if (!font)   glColor3f(0,0,0);
    glRasterPos3f(x, y, z);

    for (c=str; *c != '\0'; c++)
    {
        glutBitmapCharacter(((font) ? GLUT_BITMAP_HELVETICA_18 : GLUT_BITMAP_9_BY_15), *c);
        //glutBitmapCharacter(((font) ? GLUT_BITMAP_9_BY_15 : GLUT_BITMAP_TIMES_ROMAN_10), *c);
    }
    glFlush();
}

void print1(char *string,int x, int y,int z)
{
//set the position of the text in the window using the x and y coordinates
glRasterPos3f(x,y,z);
//get the length of the string to display
int len = (int) strlen(string);

//loop to display character by character
for (int i = 0; i < len; i++)
{
glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24,string[i]);
}
}

void frontscreen(void)
{
 glClearColor(1,1,1,1);
 //glClear(GL_COLOR_BUFFER_BIT);
 glColor3f(0,0,0);
 char string1[]="CMRIT Bengaluru";
   print1(string1,50,50,0.0);
 char string2[]="DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING";
 glColor3f(0.7,0,1);
 print1(string2,21,82,0.0);
/*
 glColor3f(1,0.5,0);
 drawstring(38,70,0.0,"A MINI PROJECT ON");
 glColor3f(1,0,0);
 drawstring(40,60,0.0,"PROJECT TITLE");
 glColor3f(1,0.5,0);
 drawstring(20,50,0.0,"BY:");
 glColor3f(0.5,0,0.5);
 drawstring(10,40,0.0,"NAME FIRST           (USN)");
 drawstring(10,34,0.0,"NAME SECOND         (USN)");
 glColor3f(1,0.5,0);
 drawstring(68,50,0.0,"GUIDES:");
 glColor3f(0.5,0.2,0.2);
 drawstring(63,40,0.0,"GUIDE NAME FIRST");
 drawstring(63,34,0.0,"GUIDE NAME SECOND");
 glColor3f(1,0.1,1);
 drawstring(32,10,0.0,"PRESS ENTER TO START");*/
 glFlush();
}
void LineLoop(float a,float b, float c, float d,float e,float f,float g,float h)
{
        glColor3f(0,0,0);
        glBegin(GL_LINE_LOOP);
        {
            glVertex2f(a,b);
            glVertex2f(c,d);
            glVertex2f(e,f);
            glVertex2f(g,h);
            glEnd();
        }
}
void Line(float a,float b,float c,float d)
{
        glColor3f(0,0,0);
        glBegin(GL_LINES);
        glVertex2f(a,b);
        glVertex2f(c,d);
        glEnd();
}
void myInit(void)
{
glClearColor(1.0,1.0,1.0,1.0);
glColor3f(0.0f,1.0f,0.0f);
glPointSize(4.0);

glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(0.0,500.0,0.0,500.0);
glMatrixMode(GL_MODELVIEW);
}
void display()
{
    glClearColor(1,1,1,1);
    glClear(GL_COLOR_BUFFER_BIT);
    glLoadIdentity();
    glColor3f(0,0,0);


    if(flag==2)
    {
    glColor3f(1,0,0);
  //  print1(input1, 145 ,350,0);
    glColor3f(0,0,0);
    char stringq[]="Ceaser's Cipher Algorithm ";
    print1(stringq,165,250,0);

    char string11[]="Received text is: ";


    glColor3f(0,0,0);
    char stringv[]="Cipher Text ";
    print1(stringv,175,84,0);

    LineLoop(40,90,40,210,160,210,160,90);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2f(50,100);
    glVertex2f(50,200);
    glVertex2f(150,200);
    glVertex2f(150,100);
    glEnd();
    glColor3f(0,1,0);
    char stringss[]="Sent text is : ";
    print1(stringss,55,150,0);
    glColor3f(0,1,0);
    print1(input1,100,150,0);
    LineLoop(80,85,90,90,110,90,120,85);
    Line(100,85,100,50);
    LineLoop(240,90,240,210,360,210,360,90);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex3f(250,100,0);
    glVertex3f(250,200,0);
    glVertex3f(350,200,0);
    glVertex3f(350,100,0);
    glEnd();
    LineLoop(280,85,290,90,310,90,320,85);
    Line(100,50,300,50);
    Line(300,50,300,85);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex3f(175,80,0);
    glVertex3f(225,80,0);
    glVertex3f(225,20,0);
    glVertex3f(175,20,0);
    glEnd();
    glPushMatrix();
    glColor3f(0,1,0);
    print1(res1,182,50,0);
    glColor3f(0,0,0);
    if(dist<200)
    {
    glTranslatef(dist,0,0);
    glBegin(GL_QUADS);
    glVertex2f(95,48);
    glVertex2f(95,52);
    glVertex2f(105,52);
    glVertex2f(105,48);
    dist+=0.005;
    glEnd();
 //   glTranslated(-dist,0,0);

    }
    else{
        glColor3f(0,1,0);
    print1(string11,260,150,0);
    print1(input1,315,150,0);
    }
//    print1(res1,182,80,0);
    glPopMatrix();
   // glutSwapBuffers();
   // glFlush();
 //  if(dist=199.95){

  //  }
    }
      if(flag==1)
      {
          glColor3f(0,0,0);
// drawstring(20.0,90.0,0.0,"NAME OF THE COLLEGE ");
        char string1[]="CMRIT";
        print1(string1,220,450,0.0);
        glColor3f(0.7,0,1);
        char string2[]="DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING";
        print1(string2,125,425,0.0);
        char string3[]="A MINI PROJECT ON";
        char string4[]="C E A S E R ' S  C I P H E R";
        char string5[]="BY";
        char string6[]="SABYASACHI GHOSH (1CR15CS133)";
        char string7[]="GUIDED BY MRS. POONAM TIJARE";
        char string9[]="Enter plain text in terminal";
        char string8[]="Press v to start";
        //char string9[100];
  //      strcpy(string9,input1);
 glColor3f(1,0.5,0);
 print1(string3,195,400,0.0);
 glColor3f(1,0,0);
 print1(string4,185,375,0.0);
 glColor3f(1,0.5,0.2);
  print1(string5,225,350,0.0);
 glColor3f(0.5,0,0.5);
  print1(string6,175,325,0.0);
 glColor3f(1,0.5,0);
  print1(string7,173,300,0.0);
 glColor3f(0.5,0.2,0.2);
 glColor3f(1,0.1,1);
 print1(string9,100,75,0.0);
 print1(string8,300,75,0.0);
// printf("%s",input1);
 //glFlush();

    //glFlush();

      }

         glutPostRedisplay();
          glFlush();
         glutSwapBuffers();
}

void mydisplay(void)
{
 glClear(GL_COLOR_BUFFER_BIT);
 //gluLookAt(0,0,5,0,0,0,0,1,0);
 if(flag==0)
   frontscreen ();
 if(flag==1)
    display();
    glFlush();
    glutPostRedisplay();
}

void myKeyboardFunc( unsigned char key, int x, int y )

{
   if(key=='x')
        {flag=0;
        //glutPostRedisplay();
        }
   if(key=='c')
   {
        //printf("Enter  plaintext");
        //scanf("%s",input1);
        flag=1;
        //glutPostRedisplay();
   }
   if(key=='v')
   {
       flag=2;
   }
     glutPostRedisplay();
}


int count(char c){
   int ascii=(int)c;
   return (ascii+3);
}




int main(int argc, char **argv)
{
    int len=0;
    int i=0;
    int j;
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(1500,1500);
    glutInitWindowPosition(0,0);

    glutCreateWindow("Ceaser's Cipher algorithm");
    myInit();
    printf("Enter the plain text \n");
    scanf("%s",input1);
    for(i=0;i<strlen(input1);i++){
        j=count(input1[i]);
        res1[i]=(char)j;
    }
    //res1=encrypt(input1,3);
    //glEnable(GL_DEPTH_TEST);
    glutDisplayFunc(display);
    glutKeyboardFunc(myKeyboardFunc);
    //glutIdleFunc(mydisplay);
    glutMainLoop();
    return 0;

